# This is Git's per-user configuration file.

# Get the current branch name (not so useful in itself, but used in
# other aliases)
[user]
  name = Duane M. Moody
  email = dmmoody@gmail.com
[credential]
  helper = osxkeychain
[core]
  excludesfile = ~/Dotfiles/gitignore_global
  editor = vi
[push]
  default = simple
[color]
  diff = auto
  status = auto
  branch = auto
  interactive = auto
  ui = true
  pager = true
[commit]
  template = ~/Dotfiles/gitmessage
[branch]
  autosetuprebase = always
[init]
  templatedir = ~/Dotfiles/git-templates
[alias]
  last = log -1 HEAD
  # Find the commits that were introduced by a merge
  merge-log = "!git log  --date-order --graph --format='%C(green)%h%Creset %C(yellow)%an%Creset %C(blue bold)%ar%Creset %C(red bold)%d%Creset%s' `git merge-span .. $1`"
  # merge-log = "!git log `git merge-span .. $1`"
  # Show the changes that were introduced by a merge
  merge-diff = "!git diff `git merge-span ... $1`"
  # As above, but in your difftool
  merge-difftool = "!git difftool `git merge-span ... $1`"
  # Given a merge commit, find the span of commits that exist(ed) on that
  # branch. Again, not so useful in itself, but used by other aliases.
  merge-span = "!f() { echo $(git log -1 $2 --merges --pretty=format:%P | cut -d' ' -f1)$1$(git log -1 $2 --merges --pretty=format:%P | cut -d' ' -f2); }; f"
  merge-x = "!git log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr)%Creset' --abbrev-commit --date=relative $(git branch-name) ... $1"
  # Get the current branch name (not so useful in itself, but used in
  # other aliases)
  branch-name = "!git rev-parse --abbrev-ref HEAD"
