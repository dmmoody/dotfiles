# Modeline and Notes"{{
# vim: foldmarker={{,}} foldlevel=0 foldmethod=marker:
#}}
# Configuration# {{
###########################

set -g default-shell $SHELL
set -g default-command "reattach-to-user-namespace -l ${SHELL}"

# use 256 term for pretty colors# {{
set -g default-terminal "screen-256color"
# }}
# increase scroll-back history# {{
set -g history-limit 10000
# }}
# use vim key bindings# {{
setw -g mode-keys vi
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
# }}
# Smart pane switching with awareness of vim splits# {{
# # See: https://github.com/christoomey/vim-tmux-navigator
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

bind-key -r C-h select-window -t :-
bind-key -r C-l select-window -t :+
# }}
# Fine adjustment (1 or 2 cursor cells per bump)# {{
bind -n S-Left resize-pane -L 2
bind -n S-Right resize-pane -R 2
bind -n S-Down resize-pane -D 1
bind -n S-Up resize-pane -U 1
# }}
# Break pane out to new window# {{
bind-key b break-pane -d
# }}
# decrease command delay (increases vim responsiveness)# {{
set -sg escape-time 1
# }}
# increase repeat time for repeatable commands# {{
set -g repeat-time 10000
# }}
# start window index at 1# {{
set -g base-index 1
# }}
# start pane index at 1# {{
setw -g pane-base-index 1
# }}
# highlight window when it has new activity# {{
setw -g monitor-activity on
set -g visual-activity on
# }}
# re-number windows when one is closed# {{
set -g renumber-windows on
# }}
# }}
#  Key Bindings# {{
###########################

# tmux prefix
# unbind C-b
# set -g prefix C-s
# bind-key -r C-s send-prefix

# Setup 'v' to begin selection as in Vim# {{
# bind-key -t vi-copy v begin-selection
# bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"
bind-key -Tcopy-mode-vi v send -X begin-selection
bind-key -Tcopy-mode-vi y send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
# }}
# Update default binding of `Enter` to also use copy-pipe# {{
# unbind -t vi-copy Enter
# bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"
unbind -Tcopy-mode-vi Enter
bind-key -Tcopy-mode-vi Enter send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
# }}
# window splitting# {{
unbind %
bind \ split-window -h -c '#{pane_current_path}'
unbind '"'
bind - split-window -v -c '#{pane_current_path}'
# }}
# Set new window with current path# {{
bind c new-window -c "#{pane_current_path}"
# }}
# force a reload of the config file# {{
unbind r
bind r source-file ~/.tmux.conf \; display "Reloaded!"
# }}
# }}
# Status Bar# {{
###########################

# enable UTF-8 support in status bar# {{
# set -g status-utf8 on
# }}
# set refresh interval for status bar# {{
set -g status-interval 30
# }}
# Airline theme for status bar# {{
source-file ~/.tmuxline.conf
# }}
# }}
# Colors# {{
###########################

# color status bar# {{
set -g status-bg colour235
set -g status-fg white
# }}
# highlight current window# {{
set-window-option -g window-status-current-fg black
set-window-option -g window-status-current-bg green
# }}
# Start copy mode when scrolling up and exit when scrolling down to bottom.# {{
# The "#{mouse_any_flag}" check just sends scrolls to any program running that
# has mouse support (like vim).
set-option -g mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'copy-mode -e'"
# }}
# }}
#set inactive/active window styles
# set -g window-style 'bg=colour236'
# set -g window-active-style 'bg=colour16'
